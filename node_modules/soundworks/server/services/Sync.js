'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _get2 = require('babel-runtime/helpers/get');

var _get3 = _interopRequireDefault(_get2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _Service2 = require('../core/Service');

var _Service3 = _interopRequireDefault(_Service2);

var _serviceManager = require('../core/serviceManager');

var _serviceManager2 = _interopRequireDefault(_serviceManager);

var _server = require('sync/server');

var _server2 = _interopRequireDefault(_server);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SERVICE_ID = 'service:sync';
/**
 * Interface for the server `'sync'` service.
 *
 * This service acts as the master clock provider for the client sync service,
 * in order to synchronize the clocks of the different clients to its own clock.
 *
 * __*The service must be used with its [client-side counterpart]{@link module:soundworks/client.Sync}*__
 *
 * **Note:** the service is based on [`github.com/collective-soundworks/sync`](https://github.com/collective-soundworks/sync).
 *
 * @memberof module:soundworks/server
 * @example
 * // inside the experience constructor
 * this.sync = this.require('sync');
 * // when the experience has started
 * const syncTime = this.sync.getSyncTime();
 */

var Sync = function (_Service) {
  (0, _inherits3.default)(Sync, _Service);

  /** _<span class="warning">__WARNING__</span> This class should never be instanciated manually_ */
  function Sync() {
    (0, _classCallCheck3.default)(this, Sync);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Sync.__proto__ || (0, _getPrototypeOf2.default)(Sync)).call(this, SERVICE_ID));

    var startTime = process.hrtime();

    var getTimeFunction = function getTimeFunction() {
      var now = process.hrtime(startTime);
      return now[0] + now[1] * 1e-9;
    };

    _this._sync = new _server2.default(getTimeFunction);
    return _this;
  }

  /** @private */


  (0, _createClass3.default)(Sync, [{
    key: 'start',
    value: function start() {
      (0, _get3.default)(Sync.prototype.__proto__ || (0, _getPrototypeOf2.default)(Sync.prototype), 'start', this).call(this);

      this.ready();
    }

    /** @private */

  }, {
    key: 'connect',
    value: function connect(client) {
      var _this2 = this;

      (0, _get3.default)(Sync.prototype.__proto__ || (0, _getPrototypeOf2.default)(Sync.prototype), 'connect', this).call(this, client);

      var sendFunction = function sendFunction() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _this2.send.apply(_this2, [client, 'pong'].concat(args));
      };
      var receiveFunction = function receiveFunction(callback) {
        return _this2.receive(client, 'ping', callback);
      };

      this._sync.start(sendFunction, receiveFunction);
    }

    /**
     * Returns the current time in the sync clock, derived from `process.hrtime()`.
     * @return {Number} - Current sync time (in _seconds_).
     */

  }, {
    key: 'getSyncTime',
    value: function getSyncTime() {
      return this._sync.getSyncTime();
    }
  }]);
  return Sync;
}(_Service3.default);

_serviceManager2.default.register(SERVICE_ID, Sync);

exports.default = Sync;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN5bmMuanMiXSwibmFtZXMiOlsiU0VSVklDRV9JRCIsIlN5bmMiLCJzdGFydFRpbWUiLCJwcm9jZXNzIiwiaHJ0aW1lIiwiZ2V0VGltZUZ1bmN0aW9uIiwibm93IiwiX3N5bmMiLCJTeW5jU2VydmVyIiwicmVhZHkiLCJjbGllbnQiLCJzZW5kRnVuY3Rpb24iLCJhcmdzIiwic2VuZCIsInJlY2VpdmVGdW5jdGlvbiIsInJlY2VpdmUiLCJjYWxsYmFjayIsInN0YXJ0IiwiZ2V0U3luY1RpbWUiLCJTZXJ2aWNlIiwic2VydmljZU1hbmFnZXIiLCJyZWdpc3RlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxJQUFNQSxhQUFhLGNBQW5CO0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWlCTUMsSTs7O0FBQ0o7QUFDQSxrQkFBYztBQUFBOztBQUFBLGtJQUNORCxVQURNOztBQUdaLFFBQU1FLFlBQVlDLFFBQVFDLE1BQVIsRUFBbEI7O0FBRUEsUUFBTUMsa0JBQWtCLFNBQWxCQSxlQUFrQixHQUFNO0FBQzVCLFVBQU1DLE1BQU1ILFFBQVFDLE1BQVIsQ0FBZUYsU0FBZixDQUFaO0FBQ0EsYUFBT0ksSUFBSSxDQUFKLElBQVNBLElBQUksQ0FBSixJQUFTLElBQXpCO0FBQ0QsS0FIRDs7QUFLQSxVQUFLQyxLQUFMLEdBQWEsSUFBSUMsZ0JBQUosQ0FBZUgsZUFBZixDQUFiO0FBVlk7QUFXYjs7QUFFRDs7Ozs7NEJBQ1E7QUFDTjs7QUFFQSxXQUFLSSxLQUFMO0FBQ0Q7O0FBRUQ7Ozs7NEJBQ1FDLE0sRUFBUTtBQUFBOztBQUNkLGdJQUFjQSxNQUFkOztBQUVBLFVBQU1DLGVBQWUsU0FBZkEsWUFBZTtBQUFBLDBDQUFJQyxJQUFKO0FBQUlBLGNBQUo7QUFBQTs7QUFBQSxlQUFhLE9BQUtDLElBQUwsZ0JBQVVILE1BQVYsRUFBa0IsTUFBbEIsU0FBNkJFLElBQTdCLEVBQWI7QUFBQSxPQUFyQjtBQUNBLFVBQU1FLGtCQUFrQixTQUFsQkEsZUFBa0I7QUFBQSxlQUFZLE9BQUtDLE9BQUwsQ0FBYUwsTUFBYixFQUFxQixNQUFyQixFQUE2Qk0sUUFBN0IsQ0FBWjtBQUFBLE9BQXhCOztBQUVBLFdBQUtULEtBQUwsQ0FBV1UsS0FBWCxDQUFpQk4sWUFBakIsRUFBK0JHLGVBQS9CO0FBQ0Q7O0FBRUQ7Ozs7Ozs7a0NBSWM7QUFDWixhQUFPLEtBQUtQLEtBQUwsQ0FBV1csV0FBWCxFQUFQO0FBQ0Q7OztFQXRDZ0JDLGlCOztBQXlDbkJDLHlCQUFlQyxRQUFmLENBQXdCckIsVUFBeEIsRUFBb0NDLElBQXBDOztrQkFFZUEsSSIsImZpbGUiOiJTeW5jLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcnZpY2UgZnJvbSAnLi4vY29yZS9TZXJ2aWNlJztcbmltcG9ydCBzZXJ2aWNlTWFuYWdlciBmcm9tICcuLi9jb3JlL3NlcnZpY2VNYW5hZ2VyJztcbmltcG9ydCBTeW5jU2VydmVyIGZyb20gJ3N5bmMvc2VydmVyJztcblxuY29uc3QgU0VSVklDRV9JRCA9ICdzZXJ2aWNlOnN5bmMnO1xuLyoqXG4gKiBJbnRlcmZhY2UgZm9yIHRoZSBzZXJ2ZXIgYCdzeW5jJ2Agc2VydmljZS5cbiAqXG4gKiBUaGlzIHNlcnZpY2UgYWN0cyBhcyB0aGUgbWFzdGVyIGNsb2NrIHByb3ZpZGVyIGZvciB0aGUgY2xpZW50IHN5bmMgc2VydmljZSxcbiAqIGluIG9yZGVyIHRvIHN5bmNocm9uaXplIHRoZSBjbG9ja3Mgb2YgdGhlIGRpZmZlcmVudCBjbGllbnRzIHRvIGl0cyBvd24gY2xvY2suXG4gKlxuICogX18qVGhlIHNlcnZpY2UgbXVzdCBiZSB1c2VkIHdpdGggaXRzIFtjbGllbnQtc2lkZSBjb3VudGVycGFydF17QGxpbmsgbW9kdWxlOnNvdW5kd29ya3MvY2xpZW50LlN5bmN9Kl9fXG4gKlxuICogKipOb3RlOioqIHRoZSBzZXJ2aWNlIGlzIGJhc2VkIG9uIFtgZ2l0aHViLmNvbS9jb2xsZWN0aXZlLXNvdW5kd29ya3Mvc3luY2BdKGh0dHBzOi8vZ2l0aHViLmNvbS9jb2xsZWN0aXZlLXNvdW5kd29ya3Mvc3luYykuXG4gKlxuICogQG1lbWJlcm9mIG1vZHVsZTpzb3VuZHdvcmtzL3NlcnZlclxuICogQGV4YW1wbGVcbiAqIC8vIGluc2lkZSB0aGUgZXhwZXJpZW5jZSBjb25zdHJ1Y3RvclxuICogdGhpcy5zeW5jID0gdGhpcy5yZXF1aXJlKCdzeW5jJyk7XG4gKiAvLyB3aGVuIHRoZSBleHBlcmllbmNlIGhhcyBzdGFydGVkXG4gKiBjb25zdCBzeW5jVGltZSA9IHRoaXMuc3luYy5nZXRTeW5jVGltZSgpO1xuICovXG5jbGFzcyBTeW5jIGV4dGVuZHMgU2VydmljZSB7XG4gIC8qKiBfPHNwYW4gY2xhc3M9XCJ3YXJuaW5nXCI+X19XQVJOSU5HX188L3NwYW4+IFRoaXMgY2xhc3Mgc2hvdWxkIG5ldmVyIGJlIGluc3RhbmNpYXRlZCBtYW51YWxseV8gKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoU0VSVklDRV9JRCk7XG5cbiAgICBjb25zdCBzdGFydFRpbWUgPSBwcm9jZXNzLmhydGltZSgpO1xuXG4gICAgY29uc3QgZ2V0VGltZUZ1bmN0aW9uID0gKCkgPT4ge1xuICAgICAgY29uc3Qgbm93ID0gcHJvY2Vzcy5ocnRpbWUoc3RhcnRUaW1lKTtcbiAgICAgIHJldHVybiBub3dbMF0gKyBub3dbMV0gKiAxZS05O1xuICAgIH1cblxuICAgIHRoaXMuX3N5bmMgPSBuZXcgU3luY1NlcnZlcihnZXRUaW1lRnVuY3Rpb24pO1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIHN0YXJ0KCkge1xuICAgIHN1cGVyLnN0YXJ0KCk7XG5cbiAgICB0aGlzLnJlYWR5KCk7XG4gIH1cblxuICAvKiogQHByaXZhdGUgKi9cbiAgY29ubmVjdChjbGllbnQpIHtcbiAgICBzdXBlci5jb25uZWN0KGNsaWVudCk7XG5cbiAgICBjb25zdCBzZW5kRnVuY3Rpb24gPSAoLi4uYXJncykgPT4gdGhpcy5zZW5kKGNsaWVudCwgJ3BvbmcnLCAuLi5hcmdzKTtcbiAgICBjb25zdCByZWNlaXZlRnVuY3Rpb24gPSBjYWxsYmFjayA9PiB0aGlzLnJlY2VpdmUoY2xpZW50LCAncGluZycsIGNhbGxiYWNrKTtcblxuICAgIHRoaXMuX3N5bmMuc3RhcnQoc2VuZEZ1bmN0aW9uLCByZWNlaXZlRnVuY3Rpb24pO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGN1cnJlbnQgdGltZSBpbiB0aGUgc3luYyBjbG9jaywgZGVyaXZlZCBmcm9tIGBwcm9jZXNzLmhydGltZSgpYC5cbiAgICogQHJldHVybiB7TnVtYmVyfSAtIEN1cnJlbnQgc3luYyB0aW1lIChpbiBfc2Vjb25kc18pLlxuICAgKi9cbiAgZ2V0U3luY1RpbWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3N5bmMuZ2V0U3luY1RpbWUoKTtcbiAgfVxufVxuXG5zZXJ2aWNlTWFuYWdlci5yZWdpc3RlcihTRVJWSUNFX0lELCBTeW5jKTtcblxuZXhwb3J0IGRlZmF1bHQgU3luYztcbiJdfQ==